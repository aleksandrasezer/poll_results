{"version":3,"sources":["app/item/Item.module.css","app/Results.module.css","app/item/Item.jsx","app/Results.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Item","props","flavourShare","votes","totalVotes","toFixed","className","s","itemContainer","itemName","scale","itemVotes","style","backgroundImage","color","width","less40itemVoteContainer","less40ItemVotes","less40ItemsShare","less10itemVoteContainer","less10ItemVotes","less10ItemsShare","Results","pollResults","sortedResults","flavour","push","sort","a","b","scales","i","length","Math","round","Vanilla","Banana","Caramel","Chocolate","colors","resultsContainer","map","item","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.876602c8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemContainer\":\"Item_itemContainer__3fiF1\",\"itemName\":\"Item_itemName__2mZrF\",\"itemVotes\":\"Item_itemVotes__2iux-\",\"less40itemVoteContainer\":\"Item_less40itemVoteContainer__PRzdf\",\"less40ItemVotes\":\"Item_less40ItemVotes__oF2x-\",\"less40ItemsShare\":\"Item_less40ItemsShare__2sRqn\",\"less10itemVoteContainer\":\"Item_less10itemVoteContainer__YywiA\",\"less10ItemVotes\":\"Item_less10ItemVotes__3_ev3\",\"less10ItemsShare\":\"Item_less10ItemsShare__2_Llb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"resultsContainer\":\"Results_resultsContainer__3tfro\"};","import React from \"react\";\r\nimport s from './Item.module.css'\r\n\r\nexport const Item = (props) => {\r\n\r\n    //share of each item's votes in total votes\r\n    const flavourShare = (props.votes / props.totalVotes * 100).toFixed(1)\r\n\r\n    return <div className={s.itemContainer}>\r\n        <span>\r\n            <span className={s.itemName}>{props.itemName}</span>\r\n        </span>\r\n        <span>\r\n            {props.scale > 40\r\n            && <span className={s.itemVotes} style={{backgroundImage: `linear-gradient(rgba(${props.color},0.5), rgba(${props.color})`, width: `${props.scale}%`}}>\r\n            <span>{props.votes} votes</span>\r\n            <span>{flavourShare}%</span>\r\n            </span>\r\n            }\r\n            {(props.scale <= 40 && props.scale > 20)\r\n            && <span className={s.less40itemVoteContainer}>\r\n            <span className={s.less40ItemVotes}\r\n                  style={{backgroundImage: `linear-gradient(rgba(${props.color},0.5), rgba(${props.color})`, width: `${props.scale}%`}}>{props.votes} votes</span>\r\n            <span className={s.less40ItemsShare}>{flavourShare}%</span>\r\n            </span>\r\n            }\r\n            {props.scale <=20\r\n            && <span className={s.less10itemVoteContainer}>\r\n            <span className={s.less10ItemVotes}\r\n                  style={{backgroundImage: `linear-gradient(rgba(${props.color},0.5), rgba(${props.color})`, width: `${props.scale}%`}}> </span>\r\n                <span className={s.less10ItemsShare}>{props.votes} votes</span>\r\n            <span className={s.less10ItemsShare}>{flavourShare}%</span>\r\n            </span>}\r\n        </span>\r\n    </div>\r\n}\r\n","import React from \"react\";\r\nimport {Item} from \"./item/Item\";\r\nimport s from './Results.module.css'\r\n\r\nexport const Results = () => {\r\n\r\n    const pollResults = {\r\n        \"Vanilla\": 17,\r\n        \"Chocolate\": 47,\r\n        \"Caramel\": 32,\r\n        \"Banana\": 28,\r\n        \"Strawberry\": 2,\r\n    }\r\n\r\n    //obj into array\r\n    let sortedResults = []\r\n    for (let flavour in pollResults) {\r\n        sortedResults.push([flavour, pollResults[flavour]])\r\n    }\r\n    sortedResults.sort((a, b) => b[1] - a[1])\r\n\r\n    //scales of each item compared to the most voted one\r\n    let scales = [100]\r\n    for (let i=1;i<sortedResults.length;i++) {\r\n        scales.push(Math.round(sortedResults[i][1]/sortedResults[0][1]*100))\r\n    }\r\n\r\n    const totalVotes = pollResults.Vanilla + pollResults.Banana + pollResults.Caramel + pollResults.Chocolate\r\n    const colors = ['28,17,186','233,7,7','12,156,55','209,204,51','252,90,192']\r\n\r\n    return <div className={s.resultsContainer}>\r\n        {sortedResults.map((item,i) => <Item key={i}\r\n                                             itemName={item[0]}\r\n                                             votes={item[1]}\r\n                                             color={colors[i]}\r\n                                             totalVotes={totalVotes}\r\n                                             scale={scales[i]}/>) }\r\n    </div>\r\n}","import './App.css';\nimport {Results} from \"./app/Results\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Results/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}